import subprocess
import sys
import os
import time
import webbrowser
import requests

def check_docker():
    try:
        result = subprocess.run(["docker", "--version"], capture_output=True, text=True)
        if result.returncode == 0:
            print(f"üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...\n{result.stdout.strip()}")
        else:
            print("‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            sys.exit(1)
    except FileNotFoundError:
        print("‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH.")
        sys.exit(1)

def start_docker_compose():
    print("üöÄ –ó–∞–ø—É—Å–∫ Elasticsearch –∏ Kibana —á–µ—Ä–µ–∑ docker-compose...")
    result = subprocess.run(["docker-compose", "up", "-d"], capture_output=True, text=True)
    if result.returncode == 0:
        print("‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã.")
    else:
        print("‚ùó –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:")
        print(result.stderr)
        sys.exit(1)

def wait_for_elasticsearch(timeout=120):
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Elasticsearch...")
    for i in range(timeout):
        try:
            response = requests.get("http://localhost:9200")
            if response.status_code == 200:
                print(f"‚úÖ Elasticsearch –¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Å–ª–µ {i+1} —Å–µ–∫.)")
                return
        except requests.ConnectionError:
            pass
        print(f"  ‚åõ {i+1} —Å–µ–∫...", end='\r')
        time.sleep(1)
    print("‚ùå Elasticsearch –Ω–µ –∑–∞–ø—É—â–µ–Ω –∑–∞ –æ—Ç–≤–µ–¥—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è.")
    sys.exit(1)

def open_in_browser():
    print("üåê –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –≤ –±—Ä–∞—É–∑–µ—Ä–µ...")
    webbrowser.open("http://localhost:9200")
    webbrowser.open("http://localhost:5601")

if __name__ == "__main__":
    os.chdir(os.path.dirname(os.path.abspath(__file__)))
    check_docker()
    start_docker_compose()
    wait_for_elasticsearch()
    open_in_browser()
